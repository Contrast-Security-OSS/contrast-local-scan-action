name: Release local scanner action

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write
  packages: write
  checks: write
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install modules
        run: npm ci
      - name: eslint
        run: npm run lint:check

  build-action-docker-image:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-image
        name: Build and publish docker image
        with:
          registry: ${{ env.REGISTRY }}
          image_name: ${{ env.IMAGE_NAME }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  verify-action:
    runs-on: ubuntu-latest
    needs: [ build-action-docker-image ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      - uses : ./
        name: Run action against itself
        with:
          apiUrl: ${{ secrets.CONTRAST__API__URL }}
          apiUserName: ${{ secrets.CONTRAST__API__USER_NAME }}
          apiKey: ${{ secrets.CONTRAST__API__API_KEY }}
          apiServiceKey: ${{ secrets.CONTRAST__API__SERVICE_KEY }}
          apiOrgId: ${{ secrets.CONTRAST__API__ORGANIZATION }}
          severity: medium
          path: src

  release:
    runs-on: ubuntu-latest
    needs: [ verify-action ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      - name: Install modules
        run: npm ci
      - name: release
        run: |
          git config --global user.name 'Github'
          git config --global user.email 'github@users.noreply.github.com'

          npm run release

